while n <  numFrames %~KbCheck

    % If esc is press, break out of the loop and close the screen
    [keyIsDown, keysecs, keyCode] = KbCheck;
    if keyCode(KbName('escape'))
        Screen('CloseAll');
        break;
    end
    

    % Draw the route
    Screen('DrawDots', windowPtr, PosL, ThicknessL, ColorL, [0 0], 2);
    Screen('DrawDots', windowPtr, PosR, ThicknessR, ColorR, [0 0], 2);
    % Draw the connecting points
    Screen('DrawDots', windowPtr, PosL0, ConnectDotSize, ConnectDotColorL0, [0 0], 2);
    Screen('DrawDots', windowPtr, PosL1, ConnectDotSize, ConnectDotColorL1, [0 0], 2);
    Screen('DrawDots', windowPtr, PosL2, ConnectDotSize, ConnectDotColorL2, [0 0], 2);
    Screen('DrawDots', windowPtr, PosL3, ConnectDotSize, ConnectDotColorL3, [0 0], 2);
    Screen('DrawDots', windowPtr, PosR0, ConnectDotSize, ConnectDotColorR0, [0 0], 2);
    Screen('DrawDots', windowPtr, PosR1, ConnectDotSize, ConnectDotColorR1, [0 0], 2);
    Screen('DrawDots', windowPtr, PosR2, ConnectDotSize, ConnectDotColorR2, [0 0], 2);
    Screen('DrawDots', windowPtr, PosR3, ConnectDotSize, ConnectDotColorR3, [0 0], 2);
 
    % position of the right-bottom to draw the dot
%     RightBottom = [screenXpixels-PhotosensorSize screenYpixels-PhotosensorSize]; 
%     if n == 1
%         % Draw a white dot on the right-bottom corner of the screen for the photosensor
%         Screen('DrawDots', windowPtr, RightBottom, PhotosensorSize, ones(3,1), [0 0], 2);
%     elseif n == length(steplength)-1
%         Screen('DrawDots', windowPtr, RightBottom, PhotosensorSize, ones(3,1), [0 0], 2);
%     elseif n == 2*length(steplength)-1
%         Screen('DrawDots', windowPtr, RightBottom, PhotosensorSize, ones(3,1), [0 0], 2);
%     elseif n == length(PosL)-1
%         Screen('DrawDots', windowPtr, RightBottom, PhotosensorSize, ones(3,1), [0 0], 2);
%     end 
%   
    % Flash the four corners every other 5 s
    if (~isempty(find([1:5:numFrames]==n))) % every five frames
    Screen('FillRect', windowPtr, white, RightBottomSquare);
    Screen('FillRect', windowPtr, white, RightUpperSquare);
    Screen('FillRect', windowPtr, white, LeftBottomSquare);
    Screen('FillRect', windowPtr, white, LeftUpperSquare);
    end
    
    % Planning phase
    if n<60
        Screen('DrawText', windowPtr, ['You have 3 sec to draw, start now!'], screenXpixels/3, screenYpixels/2, white); 
    end
    
%     % Locate the moving rectangle
%     centeredRect = CenterRectOnPointd(baseRect, PosL(1,n), PosL(2,n));
%     % Draw the rect to the screen
%     Screen('FillRect', windowPtr, rectColor, centeredRect);

    % Get mouse location
    [xML, yML, buttons] = GetMouse(windowPtr,mice(1));
    [xMR, yMR, buttons] = GetMouse(windowPtr,mice(2));
    
    % See if the mouse cursor is inside the connecting dots
    insideL0 = IsInDot(xML, yML, PosL0, ConnectDotSize);
    if insideL0 == 1
        ConnectDotColorL0 = red;
    elseif insideL0 == 0
        ConnectDotColorL0 = white;
    end
    insideL1 = IsInDot(xML, yML, PosL1, ConnectDotSize);
    if insideL1 == 1
        ConnectDotColorL1 = red;
    elseif insideL1 == 0
        ConnectDotColorL1 = white;
    end
    inside2L = IsInDot(xML, yML, PosL2, ConnectDotSize);
    if inside2L == 1
        ConnectDotColorL2 = red;
    elseif inside2L == 0
        ConnectDotColorL2 = white;
    end
    inside3L = IsInDot(xML, yML, PosL3, ConnectDotSize);
    if inside3L == 1
        ConnectDotColor3L = red;
    elseif inside3L == 0
        ConnectDotColor3L = white;
    end
    % 
    insideL0 = IsInDot(xML, yML, PosL0, ConnectDotSize);
    if insideL0 == 1
        ConnectDotColorL0 = red;
    elseif insideL0 == 0
        ConnectDotColorL0 = white;
    end
    insideL1 = IsInDot(xML, yML, PosL1, ConnectDotSize);
    if insideL1 == 1
        ConnectDotColorL1 = red;
    elseif insideL1 == 0
        ConnectDotColorL1 = white;
    end
    inside2L = IsInDot(xML, yML, PosL2, ConnectDotSize);
    if inside2L == 1
        ConnectDotColorL2 = red;
    elseif inside2L == 0
        ConnectDotColorL2 = white;
    end
    inside3L = IsInDot(xML, yML, PosL3, ConnectDotSize);
    if inside3L == 1
        ConnectDotColor3L = red;
    elseif inside3L == 0
        ConnectDotColor3L = white;
    end
    
    % Display the cursor as a dot
    Screen('DrawDots', windowPtr, [xML yML], 16, grey, [], 2);
    
    % Flip to the screen
    vbl  = Screen('Flip', windowPtr, vbl + (waitframes -0.5) * ifi);
    
    % Keep track of the nummers of flames when dot is inside the rect
%     NumInside(n)=inside;    
    
    % Keep track of the mouse trace
    xLyL(n,1) = xML;
    xlyl(n,2) = yML;
    % update n
    n = n+1;
%     Screen('Flip', windowPtr); 
end

