%% load data
clear;close all;
cd /ssd/zhibin/1overf/20220515_2P
cd /ssd/zhibin/1overf/20220517_2P
cd /ssd/zhibin/1overf/20220518_2P
cd G:\1overf\20220515_2P\Segmented_data\
%% P2 behaviral (short-range / local statistics; weak anticipation) on interval
% [ autocorr(BP_L) + xcorr(BP_L vs FB_L) + xcorr(BP_R vs FB_R) + autocorr(BP_R) ]
% 6 conditions -subplots(4,6,condi) 

figure;
for condi=1:6
    if condi==1; BP_L=BPCondi1L; FB_L=FBCondi1L; BP_R=BPCondi1R;FB_R=FBCondi1R;end
    if condi==2; BP_L=BPCondi2L; FB_L=FBCondi2L; BP_R=BPCondi2R;FB_R=FBCondi2R;end
    if condi==3; BP_L=BPCondi3L; FB_L=FBCondi3L; BP_R=BPCondi3R;FB_R=FBCondi3R;end
    if condi==4; BP_L=BPCondi4L; FB_L=FBCondi4L; BP_R=BPCondi4R;FB_R=FBCondi4R;end
    if condi==5; BP_L=BPCondi5L; FB_L=FBCondi5L; BP_R=BPCondi5R;FB_R=FBCondi5R;end
    if condi==6; BP_L=BPCondi6L; FB_L=FBCondi6L; BP_R=BPCondi6R;FB_R=FBCondi6R;end
    % compute
    subplot(4,6,condi); %  autocorr(BP_L)
        autocorr(Calinterval(BP_L'),440); xlabel('lags');ylabel('autocorr'); 
        title({'autocorr BP-L', ['Condi ' num2str(condi)]});
    subplot(4,6,6+condi); %  xcorr(BP_L vs FB_L)
        time_series1=Calinterval(BP_L');% plot(time_series1);
        time_series2=Calinterval(FB_L');% plot(time_series2);
        TimeLength=min([length(time_series1) length(time_series2)]);
        [r,lags]=xcorr(time_series1(1:TimeLength), time_series2(1:TimeLength), 1000,'normalized');
        plot(lags./2,r);xlabel('time [ms]');ylabel('Xcorr');
        title({'xcorr BP-L & FB-L', ['Condi ' num2str(condi)]});
    subplot(4,6,6*2+condi); %   xcorr(BP_R vs FB_R) 
        time_series1=Calinterval(BP_R');% plot(time_series1);
        time_series2=Calinterval(FB_R');% plot(time_series2);
        TimeLength=min([length(time_series1) length(time_series2)]);
        [r,lags]=xcorr(time_series1(1:TimeLength), time_series2(1:TimeLength), 1000,'normalized');
        plot(lags./2,r);xlabel('time [ms]');ylabel('Xcorr');
        title({'xcorr BP-R & FB-R', ['Condi ' num2str(condi)]});
    subplot(4,6,6*3+condi); %  autocorr(BP_R)
        autocorr(Calinterval(BP_R'),440); xlabel('lags');ylabel('autocorr'); 
        title({'autocorr BP-R', ['Condi ' num2str(condi)]});
end
suptitle({'short-range statistics: tapping intervals',['subject ' num2str(seed)]});
        

%% P2 behaviral (long-range / global statistics; strong anticipation) on interval
% Pspectra(BP_L) + Pspectra(BP_R) + DFA(BP_L) + DFA(BP_R)
% 6 conditions -subplots(4,6,i)
addpath /home/zhibin/Documents/GitHub/Motor_cordination/1_over_f/data_analysis/2P_testing
figure;
for condi=1:6
    if condi==1; BP_L=BPCondi1L; BP_R=BPCondi1R; end
    if condi==2; BP_L=BPCondi2L; BP_R=BPCondi2R; end
    if condi==3; BP_L=BPCondi3L; BP_R=BPCondi3R; end
    if condi==4; BP_L=BPCondi4L; BP_R=BPCondi4R; end
    if condi==5; BP_L=BPCondi5L; BP_R=BPCondi5R; end
    if condi==6; BP_L=BPCondi6L; BP_R=BPCondi6R; end
    subplot(4,6,condi); % Pspectra(BP_L)
        y=Calinterval(BP_L');
        if (condi == 1) | (condi == 2) |(condi == 3) | (condi == 4)
            Fs=2;% assuming a sampling frequency of 2 Hz
        else (condi == 5) | (condi == 6) 
            Fs=3;% assuming a sampling frequency of 3 Hz
        end
        [freqs,fcoef] = oneoverf(y,Fs);
        xlabel('Log(f)');ylabel('Log(power)');
        title({'Spectrum BP_L', ['Condi ' num2str(condi)]});
        
    subplot(4,6,6+condi);  % Pspectra(BP_R) 
        y=Calinterval(BP_R');
        if (condi == 1) | (condi == 2) |(condi == 3) | (condi == 4)
            Fs=2;% assuming a sampling frequency of 2 Hz
        else (condi == 5) | (condi == 6) 
            Fs=3;% assuming a sampling frequency of 3 Hz
        end
        [freqs,fcoef] = oneoverf(y,Fs);
        xlabel('Log(f)');ylabel('Log(power)');
        title({'Spectrum BP_R', ['Condi ' num2str(condi)]});    
        
    subplot(4,6,6*2+condi);  % DFA(BP_L)
        [D,Alpha1]=DFA_main(Calinterval(BP_L'));
        title({'DFA BP_L', ['Condi ' num2str(condi)]});
        
    subplot(4,6,6*3+condi);  % DFA(BP_R)
        [D,Alpha1]=DFA_main(Calinterval(BP_R'));
        title({'DFA BP_R', ['Condi ' num2str(condi)]});

end
suptitle({'long-range statistics: tapping intervals',['subject ' num2str(seed)]});

%% P2 Error (short & long -range statistics)
% Error + autocorr (Error) + Pspectra(Error)+ DFA(Error)
% uncoupled condition (bidiretional error) -subplots(4,10,1-2)
% unidrectional conditions -subplots(4,10,3-4)
% bidirectional condition (bidiretional error) -subplots(4,10,5-10)

figure;
for condi=1:10
    if condi==1; BP_L=BPCondi1L; BP_R=BPCondi1R; time_series1=find(BP_L==1); time_series2=find(BP_R==1); subcondi=1; end % R's Error base on L (uncouple)
    if condi==2; BP_L=BPCondi1L; BP_R=BPCondi1R; time_series1=find(BP_R==1); time_series2=find(BP_L==1); subcondi=1; end % L's Error base on R (uncouple)
    if condi==3; BP_L=BPCondi2L; BP_R=BPCondi2R; time_series1=find(BP_L==1); time_series2=find(BP_R==1); subcondi=2; end % R's Error base on L (unidirectional)
    if condi==4; BP_L=BPCondi3L; BP_R=BPCondi3R; time_series1=find(BP_R==1); time_series2=find(BP_L==1); subcondi=3; end % L's Error base on R (unidirectional)
    if condi==5; BP_L=BPCondi4L; BP_R=BPCondi4R; time_series1=find(BP_L==1); time_series2=find(BP_R==1); subcondi=4; end % R's Error base on L (2Hz bidirection)
    if condi==6; BP_L=BPCondi4L; BP_R=BPCondi4R; time_series1=find(BP_R==1); time_series2=find(BP_L==1); subcondi=4; end % L's Error base on R (2Hz bidirection)
    if condi==7; BP_L=BPCondi5L; BP_R=BPCondi5R; time_series1=find(BP_L==1); time_series2=find(BP_R==1); subcondi=5; end % R's Error base on L (3Hz bidirection)
    if condi==8; BP_L=BPCondi5L; BP_R=BPCondi5R; time_series1=find(BP_R==1); time_series2=find(BP_L==1); subcondi=5; end % L's Error base on R (3Hz bidirection)
    if condi==9; BP_L=BPCondi6L; BP_R=BPCondi6R; time_series1=find(BP_L==1); time_series2=find(BP_R==1); subcondi=6; end % R's Error base on L (>3Hz bidirection)
    if condi==10; BP_L=BPCondi6L; BP_R=BPCondi6R; time_series1=find(BP_R==1); time_series2=find(BP_L==1); subcondi=6; end % L's Error base on R (>3Hz bidirection)
    % Compute error
    % plot(time_series1); % plot(time_series2);
    % TimeLength=min([length(time_series1) length(time_series2)]);
    % TimeLength=max([length(time_series1) length(time_series2)]);
    TimeLength=length(time_series1);
    Error=[];
    % find the time difference with the closest botton press 
    for i=1:TimeLength % i=StartStim2 % syncopation has one press less than condition 1 and 3
        [minValue,closetIndex]=min(abs(time_series2-time_series1(i))); % closetIndex in BottonPressTime
        Error(i)=time_series2(closetIndex)-time_series1(i);
    end

    subplot(4,10,condi); % Error
        plot(Error/2000,'r.');
        xlabel('taps');ylabel('timing error (s)');
        title({'error', ['Condi ' num2str(subcondi)]});
        
    subplot(4,10,10+condi);  % autocorr (Error) 
        autocorr(Calinterval(Error'),440); xlabel('lags');ylabel('autocorr'); 
        title({'error', ['Condi ' num2str(subcondi)]});
        
    subplot(4,10,10*2+condi);  % Pspectra(Error)
        y=Calinterval(BP_R');
        if (condi == 1) | (condi == 2) |(condi == 3) | (condi == 4)
            Fs=2;% assuming a sampling frequency of 2 Hz
        else (condi == 5) | (condi == 6) 
            Fs=3;% assuming a sampling frequency of 3 Hz
        end[freqs,fcoef] = oneoverf(y,Fs);
        xlabel('Log(f)');ylabel('Log(power)');
        title({'Spectrum BP_R', ['Condi ' num2str(condi)]});    
        
    subplot(4,10,10*3+condi);  %  DFA(Error) 
        
    
end
suptitle('short & long -range statistics: error');

% use a sliding window and do it again
% 6 conditions -subplots(3,6,i)


%% P2 EMG (short-range / local statistics; weak anticipation)
% [ autocorr(EMG_L) + xcorr (EMG_L vs EMG_R) + autocorr(EMG_R) ]
% 6 conditions - subplots(3,6,i)


%% P2 EMG (long-range / global statistics; strong anticipation)
% [ Pspectra(EMG_L) + Xspectra (EMG_L vs EMG_R) + Pspectra(EMG_R) ]
% 6 conditions - subplots(3,6,i)


%% EEG auto xcorr (weak anticipation, short-range / local statistics)
% [ autocorr(EEG_L) + xcorr(EEG_L vs EEG_R) + autocorr(EEG_R) ]
% each of the 6 conditions (subplots(3,6,i)) for each of the 32 channels;
% auto save the 32 figures in a folder named -


%% EEG Power spectra and Xspectra (strong anticipation, long-range / global statistics)
% [ Pspectra(EEG_L) + Xspectra(EEG_L vs EEG_R) + Pspectra(EEG_R) ]
% each of the 6 conditions (subplots(3,6,i)) for each of the 32 channels;
% auto save the 32 figures in a folder named - 

[fcoef1,fcoef2,cprod, freqs] = spectra(Calinterval(BP_R')',Calinterval(BP_L')',maxfreq,sr);



